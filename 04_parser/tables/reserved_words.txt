abstract assert boolean break byte case catch char class const continue default
do double else enum extends false final finally float for goto if implements
import instanceof int interface int interface long native new null package
private protected public return short static strictfp super switch synchronized
this throw throws transient true try void volatile while and and_eq asm auto
bitand bitor bool break case catch char class compl const const_cast continue
default delete do double dynamic_cast else enum explicit export extern false
float for friend goto if inline int long mutable namespace new not not_eq
operator or or_eq private protected public register reinterpret_cast return
short signed sizeof static static_cast struct switch template this throw true
try typedef typeid typename union unsigned using virtual void volatile wchar_t
while xor xor_eq abs and array begin case const device_open device_close div do
downto else elseif end endif fileopen fileclose fabs for forward function goto
if in inline is label mod nil not of or procedure program range render read
record readln read_from_device read_from_file repeat rewind string subrange
subtype then task to type until var while write writeln write_to_device
write_to_file with